name: Linter

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Clazy:
    name: Qt_Clazy
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Neovim PPA
        run: sudo add-apt-repository -y ppa:neovim-ppa/unstable

      - name: Update
        run: sudo apt-get update -y

      - name: Install dependencies
        run: |
          sudo apt-get install -y libqt5svg5-dev neovim ninja-build qt5-default
          mkdir build
          cd build
          wget https://downloads.kdab.com/clazy/1.8/Clazy-x86_64-1.8.AppImage
          chmod +x Clazy-x86_64-1.8.AppImage

      - name: Configure
        run: >
          cmake -B ${{ github.workspace }}/build -GNinja -DCMAKE_BUILD_TYPE=Debug
          -DENABLE_CLAZY=1 -DCMAKE_CXX_COMPILER=build/Clazy-x86_64-1.8.AppImage

      - name: Build
        run: cmake --build ${{ github.workspace }}/build


  ClangFormatDiff:
    name: ClangFormat
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
    env:
      CLANG_FORMAT_DIFF: /usr/share/clang/clang-format-12/clang-format-diff.py
      BRANCH_POINT: ${{ github.base_ref }}
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout/issues/416
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup PR Branch
        run: git branch ${{ github.base_ref }} origin/${{ github.base_ref }}

      - name: Run ClangFormatDiff Script
        run: contrib/clang-format-diff.sh

      - name: Detect ClangFormat Changes
        run: |
          if [ -s clang_format.patch ]; then
            echo "changes_detected=true" >> $GITHUB_ENV
          else
            echo "changes_detected=false" >> $GITHUB_ENV
          fi

      - name: Upload Artifacts
        if: fromJSON(env.changes_detected)
        uses: actions/upload-artifact@v2
        with:
          name: ClangFormat Patch
          path: clang_format.patch

      - name: Auto-Commit Clone
        if: >
          fromJSON(env.changes_detected)
          && contains(github.event.pull_request.labels.*.name, 'auto-commit')
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          path: auto-commit

      - name: Auto-Commit Push
        if: >
          fromJSON(env.changes_detected)
          && contains(github.event.pull_request.labels.*.name, 'auto-commit')
        working-directory: auto-commit
        run: |
          git apply ../clang_format.patch
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -am "AUTO: Apply clang-format-diff.py output"
          git push

      - name: Check Validity
        run: |
          if [ -s clang_format.patch ]; then
            echo "---------------------------------------------------------------------------"
            echo "|                          CLANG FORMAT FAILURE                           |"
            echo "---------------------------------------------------------------------------"
            echo "|                                                                         |"
            echo "| Your changes are not clang-format compliant!                            |"
            echo "|                                                                         |"
            echo "| An Artifact 'ClangFormat Patch' was uploaded.                           |"
            echo "|                                                                         |"
            echo "| Consider inspecting and applying 'clang_format.patch':                  |"
            echo "|   git apply clang_format.patch                                          |"
            echo "|                                                                         |"
            echo "| Alternatively:                                                          |"
            echo "|  Add Pull Request Label 'auto-commit' to auto-apply the changes.        |"
            echo "|                                                                         |"
            echo "---------------------------------------------------------------------------"
            exit 1
          fi
